sudo: required
language: cpp
matrix:
  fast_finish: true
  include:
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env:
        - NAME="Mac clang"
      install:
        - ./script/installation/packages.sh
        - export PATH=/usr/local/opt/llvm/bin:$PATH
    - os: linux
      dist: trusty
      env:
        - NAME="Docker[packages.sh]"
        - DOCKER=true
      install:
        - docker pull ubuntu:18.04
        - docker run -itd --name build ubuntu:18.04
        - docker cp . build:/repo
        - docker exec build /repo/script/installation/packages.sh
    - os: linux
      dist: trusty
      env:
        - NAME="Docker[Dockerfile]"
        - DOCKER=true
      install:
        - docker build -t cmu-db/terrier .
        - docker run -itd --name build cmu-db/terrier
        - docker cp . build:/repo

script:
  - if [[ "$DOCKER" = true ]]; then
      docker exec build update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 99 &&
      docker exec build update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 99 &&
      docker exec build update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 99 &&
      docker exec build update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 99 &&
      docker exec build update-alternatives --set cc /usr/bin/gcc &&
      docker exec build update-alternatives --set c++ /usr/bin/g++ &&
      docker exec build /bin/sh -c "mkdir -p /repo/build" &&
      docker exec build /bin/sh -c "cd /repo/build && cmake .." &&
      docker exec build /bin/sh -c "cd /repo/build && make check-clang-tidy" &&
      docker exec build /bin/sh -c "cd /repo/build && make check-format" &&
      docker exec build /bin/sh -c "cd /repo/build && make" &&
      docker exec build /bin/sh -c "cd /repo/build && make test" ;
    else
      mkdir build &&
      cd build &&
      cmake .. &&
      make check-clang-tidy &&
      make check-format &&
      make &&
      make test ;
    fi
