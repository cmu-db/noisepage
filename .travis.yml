sudo: required
language: cpp
matrix:
  fast_finish: true
  include:
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env:
        - NAME="Mac clang"
      install:
        - echo 'y' | ./script/installation/packages.sh
        - export PATH=/usr/local/opt/llvm/bin:$PATH
    - os: linux
      dist: trusty
      env:
        - NAME="Docker[packages.sh]"
        - DOCKER=true
      install:
        - docker pull ubuntu:18.04
        - docker run -itd --name build ubuntu:18.04
        - docker cp . build:/repo
        - docker exec build /bin/sh -c "echo 'y' | /repo/script/installation/packages.sh"
    - os: linux
      dist: trusty
      env:
        - NAME="Docker[Dockerfile]"
        - DOCKER=true
      install:
        - docker build -t cmu-db/terrier .
        - docker run -itd --name build cmu-db/terrier
        - docker cp . build:/repo
    - os: linux
      dist: trusty
      env:
        - NAME="Docker[Coverage/Dockerfile]"
        - DOCKER=true
      install:
        - docker build -t cmu-db/terrier .
        - docker run -itd --name build cmu-db/terrier
        - docker cp . build:/repo
      before_script:
        - docker exec build /bin/sh -c "apt-get -y install curl"
        - docker exec build /bin/sh -c "mkdir -p /repo/build"
        - docker exec -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" build /bin/sh -c "cd /repo/build && cmake -DTERRIER_GENERATE_COVERAGE=On .."
        - docker exec -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" build /bin/sh -c "cd /repo/build && make"
        - docker exec -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" build /bin/sh -c "cd /repo/build && make coveralls"

before_script:
  - if [[ "$DOCKER" = true ]]; then
      docker exec build /bin/sh -c "mkdir -p /repo/build" &&
      docker exec build /bin/sh -c "cd /repo/build && cmake .." &&
      docker exec build /bin/sh -c "cd /repo/build && make check-clang-tidy" &&
      docker exec build /bin/sh -c "cd /repo/build && make check-format" ;
    else
      mkdir build &&
      cd build &&
      cmake .. &&
      make check-clang-tidy &&
      make check-format ;
    fi

script:
  - if [[ "$DOCKER" = true ]]; then
      docker exec build /bin/sh -c "cd /repo/build && make" &&
      docker exec build /bin/sh -c "cd /repo/build && make unittest" ;
    else
      make &&
      make unittest ;
    fi
