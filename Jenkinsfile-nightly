pipeline {
    agent none

    options {
        buildDiscarder(logRotator(daysToKeepStr: '30'))
        parallelsAlwaysFailFast()
    }

    triggers {
        cron('H H(0-1) * * *')
    }

    stages {
        stage('Performance') {
            agent { label 'benchmark' }
            when { branch 'master' }
            steps {
                sh 'echo $NODE_NAME'
                sh 'echo y | sudo ./script/installation/packages.sh'
                sh 'mkdir build'
                sh 'cd build && cmake -DCMAKE_BUILD_TYPE=Release -DTERRIER_USE_ASAN=OFF -DTERRIER_USE_JEMALLOC=ON -DTERRIER_BUILD_TESTS=OFF .. && make -j$(nproc) all'
                sh 'cd build && timeout 1h python3 ../script/testing/oltpbench/run_oltpbench.py tatp 2,35,10,35,2,14,2 --build-type=release --loader-threads=4'
                sh 'cd build && timeout 1h python3 ../script/testing/oltpbench/run_oltpbench.py smallbank 15,15,15,25,15,15 --build-type=release --loader-threads=4'
                sh 'cd build && timeout 1h python3 ../script/testing/oltpbench/run_oltpbench.py tpcc 45,43,4,4,4 --build-type=release --loader-threads=4'
                sh 'cd build && timeout 1h python3 ../script/testing/oltpbench/run_oltpbench.py noop 100 --build-type=release'
                archiveArtifacts 'build/oltpsummary/*.json'
            }
            post {
                cleanup {
                    deleteDir()
                }
            }
        }

        stage('Microbenchmark') {
            agent { label 'benchmark' }
            when { branch 'master' }
            steps {
                echo 'echo y | sudo ./script/installation/packages.sh'
                echo 'sudo apt-get install -q -y curl numactl'
                echo 'mkdir build && cd build'
                echo 'cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_WARNING_LEVEL=Production -DTERRIER_USE_JEMALLOC=ON ..'
                echo 'make gflags_ep -j 4 && make googletest_ep -j 4 && make gbenchmark_ep -j 4 && make -j4 all'
                echo 'cd ../script/micro_bench'
                echo './run_micro_bench.py --run --num-threads=4 --logfile-path=/mnt/ramdisk/benchmark.log'
            }
            post {
                cleanup {
                    deleteDir()
                }
            }
        }
    }
    
}