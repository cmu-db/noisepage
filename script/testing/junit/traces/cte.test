# Input queries for vanilla (simple) CTE integration tests.
statement ok


query I rowsort
WITH cte(x) AS (SELECT 1) SELECT x FROM cte;
----
1

query I rowsort
WITH cte AS (SELECT 1) SELECT * FROM cte;
----
1

query I rowsort
WITH cte AS (SELECT 1 AS "x") SELECT * FROM cte;
----
1

query I rowsort
WITH cte(y) AS (SELECT 1 AS "x") SELECT y FROM cte;
----
1

query I rowsort
WITH cte(x) AS (WITH cte2(y) AS (SELECT 1) SELECT y FROM cte2) SELECT x FROM cte;
----
1

statement ok


# TODO: We currently fail on this query because of the arbitrary SELECT * ordering
# WITH cte(x) AS (SELECT 1), cte2(y) AS (SELECT 2) SELECT * FROM cte INNER JOIN cte2 ON cte.x+1 = cte2.y;
statement ok


query II rowsort
WITH cte(x) AS (SELECT 1), cte2(y) AS (SELECT 2) SELECT cte.x, cte2.y FROM cte INNER JOIN cte2 ON cte.x+1 = cte2.y;
----
1
2

statement ok


query II rowsort
WITH cte(x,x) AS (SELECT 1, 2) SELECT * FROM cte;
----
1
2

query II rowsort
WITH cte AS (SELECT 4, 3) SELECT * FROM cte;
----
4
3

query I rowsort
WITH cte(y,y,x) AS (SELECT 5,4,3) SELECT x FROM cte;
----
3

statement ok


# Porting over junit test cases
statement ok
CREATE TABLE company (id INT PRIMARY KEY NOT NULL, name TEXT NOT NULL, age INT NOT NULL, address CHAR(50), salary REAL);

statement ok
INSERT INTO company (id,name,age,address,salary) VALUES (1, 'Paul', 32, 'California', 20000.00);

statement ok
INSERT INTO company (id,name,age,address,salary) VALUES (2, 'George', 21, 'NY', 10000.00);

statement ok


query T rowsort
WITH employee AS (SELECT id, name, age FROM company) SELECT name FROM employee;
----
George
Paul

query TI rowsort
WITH employee AS (SELECT age+age AS sumage, name FROM company) SELECT E2.name, E1.sumage FROM employee AS E1, employee AS E2 WHERE E1.name = E2.name;
----
George
42
Paul
64

statement ok


# Aggregate inside cte query
query I rowsort
WITH employee AS (SELECT SUM(age) AS sumage FROM company) SELECT * FROM employee;
----
53

# Join inside cte query
query TI rowsort
WITH employee AS (SELECT C1.name AS name, C2.age AS age FROM company AS C1, company AS C2) SELECT * FROM employee;
----
George
21
George
32
Paul
21
Paul
32

# Aggregate with alias inside cte query
query TI rowsort
WITH employee AS (SELECT MAX(age) AS mxage FROM company) SELECT E2.name, E2.age FROM employee AS E1, company AS E2 WHERE E1.mxage = E2.age;
----
Paul
32

statement ok


statement ok
CREATE TABLE tmp(x INT);

statement ok
INSERT INTO tmp VALUES (1), (2);

# CTE with self-join
query III nosort
WITH cte AS (SELECT * FROM tmp) SELECT A.x, B.x, C.x FROM cte A, cte B, tmp C ORDER BY A.x, B.x, C.x;
----
1
1
1
1
1
2
1
2
1
1
2
2
2
1
1
2
1
2
2
2
1
2
2
2

query III nosort
WITH cte AS (SELECT * FROM tmp) SELECT A.x, B.x, C.x FROM cte A, cte B, cte C ORDER BY A.x, B.x, C.x;
----
1
1
1
1
1
2
1
2
1
1
2
2
2
1
1
2
1
2
2
2
1
2
2
2

