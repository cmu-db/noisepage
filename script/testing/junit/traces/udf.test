statement ok
-- udf.sql

statement ok
-- Integration tests for user-defined functions.

statement ok
--

statement ok
-- Currently, these tests rely on the fact that we

statement ok
-- utilize Postgres as a reference implementation

statement ok
-- because all user-defined functions are implemented

statement ok
-- in the Postgres PL/SQL dialect, PL/pgSQL.

statement ok


statement ok
-- Create a test table

statement ok
CREATE TABLE integers(x INT, y INT);

statement ok


statement ok
-- Insert some data

statement ok
INSERT INTO integers (x, y) VALUES (1, 1), (2, 2), (3, 3);

statement ok


statement ok
-- ----------------------------------------------------------------------------

statement ok
-- return_constant()

statement ok


statement ok
CREATE FUNCTION return_constant() RETURNS INT AS $$ BEGIN RETURN 1; END $$ LANGUAGE PLPGSQL;

statement ok


query II rowsort
SELECT x, return_constant() FROM integers;
----
1
1
2
1
3
1


statement ok


statement ok
-- ----------------------------------------------------------------------------

statement ok
-- return_input()

statement ok


statement ok
CREATE FUNCTION return_input(x INT) RETURNS INT AS $$ BEGIN RETURN x; END $$ LANGUAGE PLPGSQL;

statement ok


query II rowsort
SELECT x, return_input(x) FROM integers;
----
1
1
2
2
3
3


statement ok


statement ok
-- ----------------------------------------------------------------------------

statement ok
-- return_sum()

statement ok


statement ok
CREATE FUNCTION return_sum(x INT, y INT) RETURNS INT AS $$ BEGIN RETURN x + y; END $$ LANGUAGE PLPGSQL;

statement ok


query III rowsort
SELECT x, y, return_sum(x, y) FROM integers;
----
1
1
2
2
2
4
3
3
6


statement ok


statement ok
-- ----------------------------------------------------------------------------

statement ok
-- return_prod()

statement ok


statement ok
CREATE FUNCTION return_product(x INT, y INT) RETURNS INT AS $$ BEGIN RETURN x * y; END $$ LANGUAGE PLPGSQL;

statement ok


query III rowsort
SELECT x, y, return_product(x, y) FROM integers;
----
1
1
1
2
2
4
3
3
9


statement ok


statement ok
-- ----------------------------------------------------------------------------

statement ok
-- integer_decl()

statement ok


statement ok
CREATE FUNCTION integer_decl() RETURNS INT AS $$ DECLARE x INT := 0; BEGIN RETURN x; END $$ LANGUAGE PLPGSQL;

statement ok


query III rowsort
SELECT x, y, integer_decl() FROM integers;
----
1
1
0
2
2
0
3
3
0


